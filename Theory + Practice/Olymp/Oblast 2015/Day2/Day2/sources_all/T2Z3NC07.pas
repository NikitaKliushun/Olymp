{‹®¬â¥¢ „ ­¨¨« 11 ü3 ‘«ãæª}
var
 m : array [0..9, 0..9] of integer;
 n, k, v, p, a, b : longint;
 i, j : longint;
 s : string;
BEGIN

 assign(input, 'input.txt');
 assign(output, 'output.txt');
 reset(input);
 rewrite(output);

 m[0,0] := 0; m[0,1] := -1; m[0,2] := -1; m[0,3] := -1; m[0,4] := -1; m[0,5] := -1; m[0,6] := -1; m[0,7] := -1; m[0,8] := -1; m[0,9] := -1;
 m[1,0] := -1; m[1,1] := 0; m[1,2] := -1; m[1,3] := -1; m[1,4] := -1; m[1,5] := -1; m[1,6] := -1; m[1,7] := 2; m[1,8] := -1; m[1,9] := -1;
 m[2,0] := -1; m[2,1] := -1; m[2,2] := 0; m[2,3] := 2; m[2,4] := 3; m[2,5] := -1; m[2,6] := -1; m[2,7] := -1; m[2,8] := -1; m[2,9] := -1;
 m[3,0] := -1; m[3,1] := -1; m[3,2] := 2; m[3,3] := 0; m[3,4] := 2; m[3,5] := -1; m[3,6] := -1; m[3,7] := -1; m[3,8] := -1; m[3,9] := -1;
 m[4,0] := -1; m[4,1] := -1; m[4,2] := 3; m[4,3] := 2; m[4,4] := 0; m[4,5] := -1; m[4,6] := -1; m[4,7] := -1; m[4,8] := -1; m[4,9] := -1;
 m[5,0] := -1; m[5,1] := -1; m[5,2] := -1; m[5,3] := -1; m[5,4] := -1; m[5,5] := 0; m[5,6] := 2; m[5,7] := -1; m[5,8] := -1; m[5,9] := 2;
 m[6,0] := -1; m[6,1] := -1; m[6,2] := -1; m[6,3] := -1; m[6,4] := -1; m[6,5] := 2; m[6,6] := 0; m[6,7] := -1; m[6,8] := -1; m[6,9] := 4;
 m[7,0] := -1; m[7,1] := 2; m[7,2] := -1; m[7,3] := -1; m[7,4] := -1; m[7,5] := -1; m[7,6] := -1; m[7,7] := 0; m[7,8] := -1; m[7,9] := -1;
 m[8,0] := -1; m[8,1] := -1; m[8,2] := -1; m[8,3] := -1; m[8,4] := -1; m[8,5] := -1; m[8,6] := -1; m[8,7] := -1; m[8,8] := 0; m[8,9] := -1;
 m[9,0] := -1; m[9,1] := -1; m[9,2] := -1; m[9,3] := -1; m[9,4] := -1; m[9,5] := 2; m[9,6] := 4; m[9,7] := -1; m[9,8] := -1; m[9,9] := 0;

 readln(n, k);
 readln(s);
 for i := 1 to n do
  begin
   val(s[i], v);
   for j := 0 to 9 do
    if (m[v, j] >= 0) and (m[v, j] <= k)
     then inc(p);
  end;
 for i := 1 to n do
  for j := 1 to n do
   if i <> j
    then begin
          val(s[i], a);
          val(s[j], b);
          if (m[a, b] > 0) and  (m[a, b] <= k)
           then inc(p);
         end;
  writeln(p);

END.